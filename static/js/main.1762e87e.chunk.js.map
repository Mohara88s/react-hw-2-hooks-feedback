{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","App.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","statisticsList","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","button","type","name","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","currentTarget","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,WAAa,oCAAoC,OAAS,kC,iBCA5ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,eAAiB,qC,gBCAnCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,IAAM,mB,4GCGlBC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACGD,GAAS,oBAAIE,UAAWC,IAAOH,MAAtB,SAA8BA,IACvCC,MAOLF,EAAQK,aAAe,CACrBJ,MAAO,iCAGMD,Q,gBCcAM,EA5BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACE,qBAAIR,UAAWC,IAAOQ,eAAtB,UACE,6BACE,uCAAUL,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,gB,gBCIOE,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,oBAAIZ,UAAWC,IAAOY,WAAtB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,6BACE,wBACEf,UAAWC,IAAOe,OAClBC,KAAK,SACLC,KAAMH,EACNI,QAASP,EAJX,SAMGG,KAPIA,S,gBCEAK,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAIrB,UAAWC,IAAOmB,aAAtB,SAAqCC,K,gBCsDxBC,MAnDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOjB,EAAP,KAAYoB,EAAZ,KAoBMC,EAAqB,WACzB,OAAOvB,EAAOC,EAAUC,GAM1B,OACE,sBAAKN,UAAWC,IAAOqB,IAAvB,UACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBa,QA7BR,CAAC,OAAQ,UAAW,OA6BKC,gBA3BlB,SAAAgB,GAEpB,OADiBA,EAAEC,cAAXX,MAEN,IAAK,OACHM,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MACF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MACF,QACE,aAgBDH,IAAuB,EACtB,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,IACPnB,mBAdDuB,KAAKC,MAAO,CAAC5B,GAAQuB,IAAwB,SAkBhD,cAAC,EAAD,CAAcN,QAAQ,0B,MChD9BY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1762e87e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__3ty1R\",\"button\":\"FeedbackOptions_button__3kI_C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2XPeH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsList\":\"Statistics_statisticsList__2jpq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__AIccQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__20YRb\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <>\n    {title && <h3 className={styles.title}>{title}</h3>}\n    {children}\n  </>\n);\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\nSection.defaultProps = {\n  title: 'There must be section heading',\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <ul className={styles.statisticsList}>\n      <li>\n        <p>good: {good}</p>\n      </li>\n      <li>\n        <p>neutral: {neutral}</p>\n      </li>\n      <li>\n        <p>bad: {bad}</p>\n      </li>\n      <li>\n        <p>total: {total}</p>\n      </li>\n      <li>\n        <p>positive feedback: {positivePercentage} %</p>\n      </li>\n    </ul>\n  </>\n);\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <ul className={styles.buttonList}>\n    {options.map(option => (\n      <li key={option}>\n        <button\n          className={styles.button}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\nconst Notification = ({ message }) => (\n  <h3 className={styles.Notification}>{message}</h3>\n);\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import { useState } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport styles from './App.module.css';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const scores = ['good', 'neutral', 'bad'];\n\n  const onClickButton = e => {\n    const { name } = e.currentTarget;\n    switch (name) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round(([good] / countTotalFeedback()) * 100);\n  };\n  return (\n    <div className={styles.App}>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={scores} onLeaveFeedback={onClickButton} />\n      </Section>\n      {countTotalFeedback() > 0 ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\"></Notification>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}